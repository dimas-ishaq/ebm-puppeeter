const puppeteer=require("puppeteer-extra"),fs=require("fs"),path=require("path"),StealthPlugin=require("puppeteer-extra-plugin-stealth"),anonymizeUA=require("puppeteer-extra-plugin-anonymize-ua"),{PNG:PNG}=require("pngjs"),resizeImg=require("resize-img"),os=require("os"),ssim=require("ssim.js").default;puppeteer.use(anonymizeUA()),puppeteer.use(StealthPlugin());const cookieFile=path.resolve("cookie.txt"),targetUrl="https://earnbitmoon.club/",delay=e=>new Promise((t=>setTimeout(t,e)));async function checkAndRedirect(e){let t=0;for(;t<5;){t++;try{const a=await e.url();a!==targetUrl&&(console.log(`🔄 Percobaan ${t}: URL saat ini ${a}. Mengalihkan ke ${targetUrl}...`),await e.goto(targetUrl,{waitUntil:"networkidle0",timeout:6e4}),console.log(`✅ Berhasil diarahkan ke ${targetUrl}`));break}catch(e){const t=e.message||"";if(console.log(`⚠️ Terjadi kesalahan saat pengecekan URL: ${t}`),!t.includes("net::ERR_CONNECTION_TIMED_OUT"))break;console.log("🔁 Koneksi timeout, mencoba lagi dalam 5 detik..."),await new Promise((e=>setTimeout(e,5e3)))}}}async function isLoggedIn(e){await checkAndRedirect(e);try{return await e.waitForSelector("div.info span.logout",{timeout:2e4}),!0}catch{return!1}}function cropImage(e,t,a,i,o){const n=new PNG({width:i,height:o});return PNG.bitblt(e,n,t,a,i,o,0,0),n}function addBackgroundToRight(e,t,a=5){const i=e.width+a,o=new PNG({width:i,height:e.height});for(let e=0;e<o.height;e++)for(let a=0;a<o.width;a++){const i=o.width*e+a<<2;o.data[i]=t.r,o.data[i+1]=t.g,o.data[i+2]=t.b,o.data[i+3]=255}return PNG.bitblt(e,o,0,0,e.width,e.height,0,0),o}function addBackgroundToLeft(e,t,a=5){const i=e.width+a,o=new PNG({width:i,height:e.height});for(let i=0;i<o.height;i++)for(let n=0;n<o.width;n++){const r=o.width*i+n<<2;if(n<a)o.data[r]=t.r,o.data[r+1]=t.g,o.data[r+2]=t.b,o.data[r+3]=255;else{const t=n-a+e.width*i<<2;o.data[r]=e.data[t],o.data[r+1]=e.data[t+1],o.data[r+2]=e.data[t+2],o.data[r+3]=e.data[t+3]}}return o}function detectBorders(e,t,a){const i=[];for(let o=0;o<e.width;o++){let n=0;for(let a=0;a<e.height;a++){const i=e.width*a+o<<2,[r,l,c]=[e.data[i],e.data[i+1],e.data[i+2]];r<=t.r&&l<=t.g&&c<=t.b&&n++}n/e.height>a&&(0===i.length||o-i.at(-1)>2)&&i.push(o)}return i}async function compareImages(e,t){const a=PNG.sync.read(fs.readFileSync(e)),i=PNG.sync.read(fs.readFileSync(t)),{mssim:o}=ssim({data:a.data,width:a.width,height:a.height},{data:i.data,width:i.width,height:i.height});return o}async function safeGoto(e,t,a=5){for(let i=1;i<=a;i++)try{return void await e.goto(t,{waitUntil:"networkidle0",timeout:6e4})}catch(e){if(console.log(`⏳ Retry (${i}/${a}):`,e.message),i===a)throw e;await delay(5e3)}}async function safeReload(e,t={waitUntil:"networkidle0",timeout:3e4},a=10){let i=0;for(;i<a;)try{return await e.reload(t),console.log(`✅ Berhasil reload halaman pada percobaan ke-${i+1}.`),!0}catch(e){i++,console.log(`❌ Percobaan ke-${i} gagal reload: ${e.message}`),i<a&&(console.log("🔁 Mencoba ulang dalam 5 detik..."),await delay(5e3))}return console.log(`🛑 Gagal reload setelah ${a} kali percobaan.`),!1}async function saveCookiesHeader(e){const t=(await e.cookies()).map((e=>`${e.name}=${e.value}`)).join("; ");fs.writeFileSync(cookieFile,t,"utf-8"),console.log("✅ Cookie disimpan ulang ke cookie.txt")}async function claimFaucet(e){if(await isLoggedIn(e)){console.log(`🕒 ${(new Date).toLocaleTimeString()} -- ✅ Login berhasil, mulai proses klaim`);try{console.log("🕵️ Mencari tombol klaim..."),await e.waitForSelector("div#claimFaucet button[data-toggle=modal]",{visible:!0}),await e.click("div#claimFaucet button[data-toggle=modal]"),await delay(1e3),await e.click("div.iconcaptcha-modal__body"),await delay(2e3),await e.waitForSelector(".iconcaptcha-modal__body-icons",{visible:!0}),console.log(`🕒 ${(new Date).toLocaleTimeString()} -- 📸 Mengambil screenshot captcha...`);const t=await e.$("div.iconcaptcha-modal__body-selection"),a=await t.boundingBox(),i=await t.screenshot({encoding:"binary"});fs.writeFileSync("icon.png",i),console.log(`🕒 ${(new Date).toLocaleTimeString()} -- ✂️ Memproses gambar captcha...`);const o=PNG.sync.read(i);fs.writeFileSync("before-icon.png",PNG.sync.write(o));const n=addBackgroundToRight(o,{r:76,g:76,b:76},5),r=PNG.sync.write(n);fs.writeFileSync("addbgright.png",r);const l=fs.readFileSync("addbgright.png"),c=addBackgroundToLeft(PNG.sync.read(l),{r:76,g:76,b:76},5),s=PNG.sync.write(c);fs.writeFileSync("addbgleft.png",s);const g=PNG.sync.read(fs.readFileSync("addbgleft.png")),d=[0,...detectBorders(g,{r:75,g:75,b:75},.9),g.width],w=d.slice(0,-1).map(((e,t)=>{const a=d[t+1]-e,i=new PNG({width:a,height:g.height});return PNG.bitblt(g,i,e,0,a,g.height,0,0),i}));console.log(`🕒 ${(new Date).toLocaleTimeString()} -- 🔍 Ditemukan ${w.length} icon .`);const m=path.join(os.tmpdir(),"icon-comparison");fs.existsSync(m)||fs.mkdirSync(m),console.log(`🕒 ${(new Date).toLocaleTimeString()} -- 📏 Resize & bandingkan gambar...`);const h=await Promise.all(w.map((async(e,t)=>{const a=PNG.sync.write(e),i=await resizeImg(a,{width:64,height:64}),o=path.join(m,`icon_${t}.png`);return fs.writeFileSync(o,i),o}))),u=await Promise.all(h.map((async(e,t)=>{const a=await h.reduce((async(a,i,o)=>{if(t===o)return a;const n=await compareImages(e,i);return await a+n}),Promise.resolve(0));return console.log(`🕒 ${(new Date).toLocaleTimeString()} -- 📊 Total SSIM untuk icon_${t}.png: ${a.toFixed(4)}`),{index:t,totalScore:a}})));u.sort(((e,t)=>e.totalScore-t.totalScore));const p=u[0].index;console.log(`🕒 ${(new Date).toLocaleTimeString()} -- 🎯 Gambar terpilih: index ke-${p}`);const y=d[p],b=d[p+1]-y,f=a.x+y+b/2,k=a.y+a.height/2;await e.mouse.click(f,k),console.log(`🕒 ${(new Date).toLocaleTimeString()} -- 🖱️ Klik captcha di posisi X=${f.toFixed(2)}, Y=${k.toFixed(2)}`),await e.waitForSelector("button.zxz"),await delay(8e3),await e.click("button.zxz");const S=await e.screenshot({encoding:"binary"});fs.writeFileSync("claim.png",S);try{const t=await e.screenshot({encoding:"binary"});fs.writeFileSync("claim2.png",t),await delay(5e3),await e.reload({waitUntil:"networkidle0",timeout:6e4});const a=await e.$eval("#sidebarCoins",(e=>e.innerText.trim())),i=await e.$eval('a[href="/rewards.html"] > b',(e=>e.innerText.trim()));await e.waitForSelector("#claimTime",{visible:!0,timeout:6e4});const o=await e.$eval("#claimTime",(e=>e.innerText.trim()));if(""===o)throw console.log(`🕒 ${(new Date).toLocaleTimeString()} - ❌ Gagal klaim, pesan: "", mencoba ulang...`),new Error("Klaim tidak berhasil");console.log(`🕒 ${(new Date).toLocaleTimeString()} - 🎉 ${o} - 💰 ${a} - 📈 ${i}`),console.log("🕒 Menunggu 5 menit sebelum klaim kembali...")}catch(t){const a=await e.screenshot({encoding:"binary"});throw fs.writeFileSync("claim3.png",a),console.log(`⚠️ Gagal klaim: ${t.message}`),t}}catch(e){throw console.log(`🕒 ${(new Date).toLocaleTimeString()} -- ⚠️ Gagal klaim:`,e.message),e}}else console.log(`🕒 ${(new Date).toLocaleTimeString()} -- ❌ Cookie tidak valid atau belum login`)}async function runClaim(){const e=await puppeteer.launch({headless:!0,executablePath:"/usr/bin/chromium",ignoreHTTPSErrors:!0,args:["--no-sandbox","--disable-gpu","--ignore-certificate-errors","--disable-dev-shm-usage","--disable-setuid-sandbox","--no-zygote","--single-process"]}),t=await e.newPage();await t.setViewport({width:1920,height:1080}),console.clear(),console.log(`🕒 ${(new Date).toLocaleTimeString()} -- 🌐 Membuka halaman...`);const a=fs.readFileSync("user-agent.txt","utf8").trim();if(await t.setUserAgent(a),await t.setExtraHTTPHeaders({accept:"*/*","accept-language":"en-US,en;q=0.9",referer:targetUrl}),fs.existsSync(cookieFile)){console.log(`🕒 ${(new Date).toLocaleTimeString()} -- 🍪 Memuat cookie dari file...`);const e=fs.readFileSync(cookieFile,"utf-8").trim().split(";").map((e=>{const[t,...a]=e.trim().split("=");return{name:t,value:a.join("="),domain:"earnbitmoon.club",path:"/",httpOnly:!1,secure:!1}}));await t.setCookie(...e)}await safeGoto(t,targetUrl),console.log(`🕒 ${(new Date).toLocaleTimeString()} -- ✅ Halaman dimuat`);if(!await isLoggedIn(t))return console.log(`🕒 ${(new Date).toLocaleTimeString()} -- ❌ Login gagal.`),void await e.close();console.log(`🕒 ${(new Date).toLocaleTimeString()} -- ✅ Login berhasil!`),await claimFaucet(t),await saveCookiesHeader(t),await e.close()}(async()=>{for(;;)try{await runClaim(),console.log(`🕒 ${(new Date).toLocaleTimeString()} -- 💤 Browser ditutup, tidur 5 menit...`),await delay(295e3)}catch(e){console.log(`🕒 ${(new Date).toLocaleTimeString()} -- 🔄 Terjadi kesalahan: ${e.message}. Mengulangi proses klaim dalam 15 detik...`),await delay(15e3)}})();
